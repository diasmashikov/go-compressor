services:
  k6:
    image: grafana/k6:latest
    volumes:
      - ./tests/k6:/scripts
      - ./tests/k6/scenarios/test-images:/scripts/scenarios/test-images
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
      - API_HOST=host.docker.internal
    networks:
      - k6-network
    depends_on:
      - influxdb
    command: run /scripts/scenarios/${TEST_SCRIPT:-test-10-users.js}

  influxdb:
    image: influxdb:1.8
    networks:
      - k6-network
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_HTTP_MAX_BODY_SIZE=0
      - INFLUXDB_HTTP_AUTH_ENABLED=false
    volumes:
      - type: volume
        source: influxdb-data # This is the named volume we defined below
        target: /var/lib/influxdb # This is where InfluxDB stores its data

  grafana:
    image: grafana/grafana:latest
    networks:
      - k6-network
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - type: volume
        source: grafana-data # This is the named volume we defined below
        target: /var/lib/grafana # This is where Grafana stores its data
    depends_on:
      - influxdb

networks:
  k6-network:
    driver: bridge

# These are the named volumes that get mapped above
volumes:
  influxdb-data: # This creates a named volume that persists InfluxDB data
  grafana-data: # This creates a named volume that persists Grafana data
